type Researcher {
    id: Int!
    firstname: String!
    lastname: String
    age: Int!
    username: String!
    password: String!
    email: String!
    avatar: String
    role: String!  
    competencies: [Competencie!]  
}

type Anomaly {
    id: Int!
    creator: Researcher!
    description: String!
    type: String!
}

input AnomalyInput {
    creator: Int!
    title: String!
    type: String!
}

scalar JSON
scalar Date
scalar Time

type Incident {
    id: Int!
    description: String!
    location: JSON!
    maxResearchers: Int!
    date: Date!
    time: Time!
    resolved: Boolean!
}

input IncidentInput {
    description: String!
    location: JSON!
    maxResearchers: Int!
    date: Date!
    time: Time!
}

type Query {
    getAnomalies: [Anomaly!]
    getAnomalie(id: Int!): Anomaly!
}


type Mutation {
    createAnomalie(input: AnomalyInput!): Anomaly!
}
